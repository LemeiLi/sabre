!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ALTER_SATA	include/consumer/online/save/save.h	19;"	d
CAM_MAXBUFFER_NUM	include/consumer/online/save/save.h	36;"	d
CAM_RINGBUFFERLEN	include/consumer/online/save/save.h	39;"	d
CAM_STORE_NUM	include/consumer/online/save/save.h	37;"	d
CAM_STORE_SIZE	include/consumer/online/save/save.h	38;"	d
CONSTEXPR	include/utils/utils.h	54;"	d
CONSTEXPR	include/utils/utils.h	59;"	d
CPOOL_NUM	include/consumer/common/cache_pool.h	25;"	d
CV22_4CAM_ID	net/nec_image.c	47;"	d	file:
DEBUG	include/utils/utils.h	63;"	d
DEFAULT_SDCARD	include/consumer/online/save/save.h	17;"	d
DIR_SDCARD	include/consumer/online/save/save.h	18;"	d
DO_PRAGMA	include/utils/utils.h	40;"	d
ERROR	include/utils/utils.h	65;"	d
FIFO_THRESHOLD	include/utils/fifo.h	27;"	d
FLC_IP	include/consumer/flc/flc.h	15;"	d
FLC_PORTA	include/consumer/flc/flc.h	16;"	d
FLC_PORTB	include/consumer/flc/flc.h	17;"	d
GPS_MAXBUFFER_NUM	include/consumer/online/save/save.h	26;"	d
GPS_PATH	include/consumer/online/save/save.h	13;"	d
GPS_RINGBUFFERLEN	include/consumer/online/save/save.h	29;"	d
GPS_STORE_NUM	include/consumer/online/save/save.h	27;"	d
GPS_STORE_SIZE	include/consumer/online/save/save.h	28;"	d
Gps_data_store	consumer/online/save/save.c	/^static int Gps_data_store(void)$/;"	f	file:
IMAGE_SIZE_PER_SLICE	net/nec_image.h	18;"	d
IMU_MAXBUFFER_NUM	include/consumer/online/save/save.h	21;"	d
IMU_PATH	include/consumer/online/save/save.h	12;"	d
IMU_RINGBUFFERLEN	include/consumer/online/save/save.h	24;"	d
IMU_STORE_NUM	include/consumer/online/save/save.h	22;"	d
IMU_STORE_SIZE	include/consumer/online/save/save.h	23;"	d
INIT_LIST_HEAD	include/utils/ulist.h	23;"	d
Imu_data_store	consumer/online/save/save.c	/^static int Imu_data_store(void)$/;"	f	file:
JIMAGE_DIR	include/consumer/online/save/save.h	15;"	d
LANE_SIZE	include/consumer/common/channel.h	15;"	d
LIST_HEAD	include/utils/ulist.h	20;"	d
LIST_HEAD_INIT	include/utils/ulist.h	18;"	d
MALLOC_LIKE	include/utils/fifo.h	13;"	d
MALLOC_LIKE	include/utils/fifo.h	19;"	d
MALLOC_LIKE	include/utils/fifo.h	50;"	d
MAV_IP	include/consumer/mav/mav.h	15;"	d
MAV_PORTA	include/consumer/mav/mav.h	16;"	d
MAV_PORTB	include/consumer/mav/mav.h	17;"	d
MAX_EVENTS	net/net_tcp_server.c	23;"	d	file:
NET_GPS_ID	include/net/nrb_desc.h	/^	NET_GPS_ID = 0,$/;"	e	enum:nrb_id
NET_GPS_META_LEN	net/nec_gps.h	20;"	d
NET_ID_NUM	include/net/nrb_desc.h	/^	NET_ID_NUM,$/;"	e	enum:nrb_id
NET_IMAGE_ID	include/net/nrb_desc.h	/^	NET_IMAGE_ID,$/;"	e	enum:nrb_id
NET_IMAGE_META_LEN	net/nec_image.h	24;"	d
NET_IMU_ID	include/net/nrb_desc.h	/^	NET_IMU_ID,$/;"	e	enum:nrb_id
NET_IMU_META_LEN	net/nec_imu.h	19;"	d
NET_ODO_ID	include/net/nrb_desc.h	/^	NET_ODO_ID, $/;"	e	enum:nrb_id
NET_ODO_META_LEN	net/nec_odo.h	19;"	d
NET_PROTOCOL	net/net_tcp_server.c	24;"	d	file:
NO_NULL_POINTERS	include/utils/fifo.h	14;"	d
NO_NULL_POINTERS	include/utils/fifo.h	20;"	d
NO_NULL_POINTERS	include/utils/fifo.h	49;"	d
NRB_GPS_POOL_CAPABILITY	include/net/nrb_gps.h	28;"	d
NRB_IMG_POOL_CAPABILITY	include/net/nrb_image.h	18;"	d
NRB_IMU_POOL_CAPABILITY	include/net/nrb_imu.h	19;"	d
NRB_ODO_POOL_CAPABILITY	include/net/nrb_odo.h	19;"	d
NTV_GPS_ID	include/consumer/common/ntv_desc.h	/^	NTV_GPS_ID = 1,$/;"	e	enum:ntv_id
NTV_IMAGE_ID	include/consumer/common/ntv_desc.h	/^	NTV_IMAGE_ID = 4,$/;"	e	enum:ntv_id
NTV_IMU_ID	include/consumer/common/ntv_desc.h	/^	NTV_IMU_ID = 2,$/;"	e	enum:ntv_id
NTV_ODO_ID	include/consumer/common/ntv_desc.h	/^	NTV_ODO_ID = 3,$/;"	e	enum:ntv_id
NTV_POOL_CAPABILITY	include/consumer/common/ntv_desc.h	18;"	d
NULL	include/utils/rbtree.h	122;"	d
NULL	include/utils/rbtree.h	124;"	d
NULL	include/utils/rbtree.h	126;"	d
ODO_MAXBUFFER_NUM	include/consumer/online/save/save.h	31;"	d
ODO_PATH	include/consumer/online/save/save.h	14;"	d
ODO_RINGBUFFERLEN	include/consumer/online/save/save.h	34;"	d
ODO_STORE_NUM	include/consumer/online/save/save.h	32;"	d
ODO_STORE_SIZE	include/consumer/online/save/save.h	33;"	d
Odo_data_store	consumer/online/save/save.c	/^static int Odo_data_store(void)$/;"	f	file:
PURE	include/utils/fifo.h	12;"	d
PURE	include/utils/fifo.h	18;"	d
PURE	include/utils/fifo.h	51;"	d
PURE	include/utils/utils.h	55;"	d
PURE	include/utils/utils.h	60;"	d
RB_BLACK	include/utils/rbtree.h	133;"	d
RB_CLEAR_NODE	include/utils/rbtree.h	166;"	d
RB_EMPTY_NODE	include/utils/rbtree.h	165;"	d
RB_EMPTY_ROOT	include/utils/rbtree.h	164;"	d
RB_RED	include/utils/rbtree.h	132;"	d
RB_ROOT	include/utils/rbtree.h	161;"	d
RING_BUFFER_FREE	include/utils/ringbuffer.h	14;"	d
RING_BUFFER_MALLOC	include/utils/ringbuffer.h	13;"	d
RingBuffer	include/utils/ringbuffer.h	/^}RingBuffer;$/;"	t	typeref:struct:__anon1
RingBuffer_Avail	include/utils/ringbuffer.h	/^static inline uint32_t RingBuffer_Avail(RingBuffer *fifo)$/;"	f
RingBuffer_Free	utils/ringbuffer.c	/^void RingBuffer_Free(RingBuffer *fifo)$/;"	f
RingBuffer_In	utils/ringbuffer.c	/^uint32_t RingBuffer_In(RingBuffer *fifo, void *in, uint32_t len)$/;"	f
RingBuffer_IsEmpty	include/utils/ringbuffer.h	/^static inline bool RingBuffer_IsEmpty(RingBuffer *fifo)$/;"	f
RingBuffer_IsFull	include/utils/ringbuffer.h	/^static inline bool RingBuffer_IsFull(RingBuffer *fifo)$/;"	f
RingBuffer_Len	include/utils/ringbuffer.h	/^static inline uint32_t RingBuffer_Len(RingBuffer *fifo)$/;"	f
RingBuffer_Malloc	utils/ringbuffer.c	/^RingBuffer *RingBuffer_Malloc(uint32_t size)$/;"	f
RingBuffer_Out	utils/ringbuffer.c	/^uint32_t RingBuffer_Out(RingBuffer *fifo, void *out, uint32_t len)$/;"	f
RingBuffer_Reset	include/utils/ringbuffer.h	/^static inline void RingBuffer_Reset(RingBuffer *fifo)$/;"	f
RingBuffer_Size	include/utils/ringbuffer.h	/^static inline uint32_t RingBuffer_Size(RingBuffer *fifo)$/;"	f
SAVEDATA_PATH	include/consumer/online/save/save.h	10;"	d
STATISTICS_CONFIG	include/consumer/online/save/save.h	11;"	d
TIC	include/utils/utils.h	21;"	d
TOC	include/utils/utils.h	25;"	d
TODO	include/utils/utils.h	41;"	d
WARNING	include/utils/utils.h	64;"	d
WARN_UNUSED_RESULT	include/utils/fifo.h	15;"	d
WARN_UNUSED_RESULT	include/utils/fifo.h	21;"	d
WARN_UNUSED_RESULT	include/utils/fifo.h	48;"	d
YIMAGE_DIR	include/consumer/online/save/save.h	16;"	d
_3GEN_COLLECTOR_H	include/consumer/mav/mav.h	6;"	d
_BASE_OBJECT_H	include/consumer/common/base_object.h	6;"	d
_CACHE_POOL_H	include/consumer/common/cache_pool.h	9;"	d
_CACHE_POOL_H	include/utils/cache_pool.h	9;"	d
_CHANNEL_H	include/consumer/common/channel.h	7;"	d
_DISPATCHER_H	include/consumer/common/dispatcher.h	7;"	d
_FABRICATOR_H	include/consumer/common/fabricator.h	7;"	d
_FEEDER_H	include/consumer/common/feeder.h	7;"	d
_FLC_H	include/consumer/flc/flc.h	6;"	d
_LINUX_RBTREE_H	include/utils/rbtree.h	111;"	d
_NATIVE_DESCRIPTOR_H	include/consumer/common/ntv_desc.h	6;"	d
_NET_GPS_ENCODER_H	net/nec_gps.h	6;"	d
_NET_IMAGE_ENCODER_H	net/nec_image.h	6;"	d
_NET_IMU_ENCODER_H	net/nec_imu.h	6;"	d
_NET_MAIN_H	include/net/net_tcp_server.h	7;"	d
_NET_ODO_ENCODER_H	net/nec_odo.h	6;"	d
_NET_UDP_SERVER_H	include/net/net_udp_server.h	9;"	d
_NRB_DESCRIPTOR_H	include/net/nrb_desc.h	6;"	d
_NRB_GPS_H	include/net/nrb_gps.h	6;"	d
_NRB_IMAGE_H	include/net/nrb_image.h	6;"	d
_NRB_IMU_H	include/net/nrb_imu.h	6;"	d
_NRB_ODO_H	include/net/nrb_odo.h	6;"	d
_PERSISTENCE_H	include/consumer/common/persistence.h	6;"	d
_PIPELINE_H	include/consumer/common/pipeline.h	7;"	d
_RECYCLER_H	include/consumer/common/recycler.h	6;"	d
_TRANSMITTER_H	include/consumer/common/transmitter.h	7;"	d
_UTILS_H	include/utils/utils.h	9;"	d
__RINGBUFFER_H	include/utils/ringbuffer.h	2;"	d
__SAVE_H__	include/consumer/online/save/save.h	2;"	d
__ULIST_H__	include/utils/ulist.h	2;"	d
__construct_nrb_gps	net/nrb_gps.c	/^static struct nrb_gps_desc* __construct_nrb_gps(void* pdata, size_t data_size)$/;"	f	file:
__construct_nrb_imu	net/nrb_imu.c	/^struct nrb_imu_desc* __construct_nrb_imu(void* pdata, size_t data_size)$/;"	f
__construct_nrb_odo	net/nrb_odo.c	/^struct nrb_odo_desc* __construct_nrb_odo(void* pdata, size_t data_size)$/;"	f
__construct_ntv_desc	consumer/common/ntv_desc.c	/^static struct ntv_desc* __construct_ntv_desc(size_t size, enum ntv_id id)$/;"	f	file:
__list_add	include/utils/ulist.h	/^static inline void __list_add(struct list_head *new,$/;"	f
__list_del	include/utils/ulist.h	/^static inline void __list_del(struct list_head *prev, struct list_head *next)$/;"	f
__list_splice	include/utils/ulist.h	/^static inline void __list_splice(struct list_head *list,$/;"	f
__rb_erase_color	utils/rbtree.c	/^static void __rb_erase_color(struct rb_node *node, struct rb_node *parent,$/;"	f	file:
__rb_rotate_left	utils/rbtree.c	/^static void __rb_rotate_left(struct rb_node *node, struct rb_root *root)$/;"	f	file:
__rb_rotate_right	utils/rbtree.c	/^static void __rb_rotate_right(struct rb_node *node, struct rb_root *root)$/;"	f	file:
_ip	include/net/net_tcp_server.h	/^	const char* _ip; $/;"	m	struct:server
_port	include/net/net_tcp_server.h	/^	const char* _port;$/;"	m	struct:server
addr_map	include/net/net_tcp_server.h	/^typedef struct addr_map $/;"	s
addr_map_t	include/net/net_tcp_server.h	/^}addr_map_t;$/;"	t	typeref:struct:addr_map
alloc_net_image_block	net/nec_image.c	/^static struct nrb_image_desc* alloc_net_image_block(struct cache_pool* cpool)$/;"	f	file:
base	include/net/nrb_gps.h	/^	struct nrb_desc base;$/;"	m	struct:nrb_gps_desc	typeref:struct:nrb_gps_desc::nrb_desc
base	include/net/nrb_image.h	/^	struct nrb_desc base;$/;"	m	struct:net_image_desc	typeref:struct:net_image_desc::nrb_desc
base	include/net/nrb_image.h	/^	struct nrb_desc base;$/;"	m	struct:nrb_image_desc	typeref:struct:nrb_image_desc::nrb_desc
base	include/net/nrb_imu.h	/^	struct nrb_desc base;$/;"	m	struct:nrb_imu_desc	typeref:struct:nrb_imu_desc::nrb_desc
base	include/net/nrb_odo.h	/^	struct nrb_desc base;$/;"	m	struct:nrb_odo_desc	typeref:struct:nrb_odo_desc::nrb_desc
bobj	include/consumer/common/ntv_desc.h	/^	struct bobject bobj;$/;"	m	struct:ntv_desc	typeref:struct:ntv_desc::bobject
bobj	include/net/nrb_desc.h	/^	struct bobject bobj; $/;"	m	struct:nrb_desc	typeref:struct:nrb_desc::bobject
bobj_get_instance	include/consumer/common/base_object.h	39;"	d
bobject	include/consumer/common/base_object.h	/^typedef struct bobject {$/;"	s
bobject_data	include/consumer/common/base_object.h	15;"	d
bobject_methods	include/consumer/common/base_object.h	14;"	d
bobject_t	include/consumer/common/base_object.h	/^}bobject_t;$/;"	t	typeref:struct:bobject
bobject_vmt	include/consumer/common/base_object.h	/^struct bobject_vmt {$/;"	s
buffer	include/utils/ringbuffer.h	/^  uint8_t *buffer;$/;"	m	struct:__anon1
cache_pool	include/consumer/common/cache_pool.h	/^struct cache_pool {$/;"	s
cache_pool_container	include/consumer/common/cache_pool.h	/^typedef struct cache_pool_container {$/;"	s
cache_pool_container_t	include/consumer/common/cache_pool.h	/^}cache_pool_container_t;$/;"	t	typeref:struct:cache_pool_container
cache_pool_t	include/consumer/common/cache_pool.h	/^}cache_pool_t;$/;"	v	typeref:struct:cache_pool
cache_rb_root	include/utils/cache_pool.h	/^typedef struct cache_rb_root {$/;"	s
cache_rb_root_t	include/utils/cache_pool.h	/^}cache_rb_root_t;$/;"	t	typeref:struct:cache_rb_root
cap	include/consumer/common/ntv_desc.h	/^	size_t cap;   \/\/\/< capacity of this ntv_desc$/;"	m	struct:ntv_desc
cap	include/net/nrb_gps.h	/^	size_t cap;      \/\/\/< capacity $/;"	m	struct:nrb_gps_desc
cap	include/net/nrb_image.h	/^	size_t cap;$/;"	m	struct:nrb_image_desc
cap	include/net/nrb_imu.h	/^	size_t cap;$/;"	m	struct:nrb_imu_desc
cap	include/net/nrb_odo.h	/^	size_t cap;$/;"	m	struct:nrb_odo_desc
channel	include/consumer/common/channel.h	/^struct channel $/;"	s
channel_t	include/consumer/common/channel.h	/^}channel_t;$/;"	v	typeref:struct:channel
check_sum_add16	utils/utils.c	/^uint16_t check_sum_add16(const uint8_t buf[], size_t size) $/;"	f
check_sum_add8	utils/utils.c	/^uint8_t check_sum_add8(const uint8_t buf[], size_t size) $/;"	f
check_sum_xor8	utils/utils.c	/^uint8_t check_sum_xor8(const uint8_t buf[], size_t size) $/;"	f
clean_all_data_lanes	consumer/common/channel.c	/^static void clean_all_data_lanes(struct channel* pthis)$/;"	f	file:
clean_cache_pool_nrb	consumer/common/cache_pool.c	/^static void clean_cache_pool_nrb(struct cache_pool* pthis, enum nrb_id id)$/;"	f	file:
clean_cache_pool_ntv	consumer/common/cache_pool.c	/^void clean_cache_pool_ntv(struct cache_pool* pthis)$/;"	f
client_fd	include/net/net_tcp_server.h	/^	volatile uint32_t client_fd;$/;"	m	struct:liver
cond	include/net/net_tcp_server.h	/^	pthread_cond_t cond;$/;"	m	struct:liver
cond	include/utils/fifo.h	/^    pthread_cond_t cond;$/;"	m	struct:fifo
construct_cache_pool	consumer/common/cache_pool.c	/^static struct cache_pool* construct_cache_pool(void)$/;"	f	file:
construct_cpool_container	consumer/common/cache_pool.c	/^struct cache_pool_container* construct_cpool_container(void)$/;"	f
construct_nrb	include/net/nrb_desc.h	/^	void (*construct_nrb)(void* pdata, size_t size);$/;"	m	struct:nrb_ops
construct_nrb_gps	net/nrb_gps.c	/^struct nrb_gps_desc* construct_nrb_gps(struct cache_pool* cpool, void* pdata, size_t data_size)$/;"	f
construct_nrb_image	net/nrb_image.c	/^void construct_nrb_image(struct cache_pool* cpool, struct net_image_desc* pimage, $/;"	f
construct_nrb_imu	net/nrb_imu.c	/^struct nrb_imu_desc* construct_nrb_imu(struct cache_pool* cpool, void* pdata, size_t data_size)$/;"	f
construct_nrb_odo	net/nrb_odo.c	/^struct nrb_odo_desc* construct_nrb_odo(struct cache_pool* cpool, void* pdata, size_t data_size)$/;"	f
construct_ntv_desc	consumer/common/ntv_desc.c	/^struct ntv_desc* construct_ntv_desc(struct cache_pool* cpool, void* data, size_t size, enum ntv_id id)$/;"	f
container_of	include/utils/utils.h	37;"	d
copy_cam_data	consumer/online/save/save.c	/^static int copy_cam_data(struct cam_buf_save* cam_save, struct cam_buf* c_buf, double timestamp)$/;"	f	file:
cpools	include/consumer/common/cache_pool.h	/^	struct cache_pool* cpools[CPOOL_NUM]; $/;"	m	struct:cache_pool_container	typeref:struct:cache_pool_container::cache_pool
create_data_channel	consumer/common/channel.c	/^struct channel* create_data_channel(void)$/;"	f
create_dispatcher	consumer/common/dispatcher.c	/^struct dispatcher* create_dispatcher(struct feeder* resc, struct channel* dest)$/;"	f
create_fabricator_thread	consumer/common/fabricator.c	/^struct fabricator* create_fabricator_thread(struct liver* pliver, struct channel* pch)$/;"	f
create_feeder	consumer/common/feeder.c	/^struct feeder* create_feeder(void)$/;"	f
create_live_server	net/net_tcp_server.c	/^static int create_live_server(struct liver* mjpg_liver, const char* ip_addr, const char* port)$/;"	f	file:
create_pipeline	consumer/common/pipeline.c	/^struct pipeline* create_pipeline(const char* ip, const char* port)$/;"	f
create_recycler_thread	consumer/common/recycler.c	/^struct recycler* create_recycler_thread(struct channel* pch)$/;"	f
create_server_thread	net/net_tcp_server.c	/^struct server* create_server_thread(struct liver* pliver, const char* ip_addr, const char* port)$/;"	f
create_sjpg_thread	consumer/online/save/save.c	/^void create_sjpg_thread(void)$/;"	f
create_smcu_thread	consumer/online/save/save.c	/^void create_smcu_thread(void)$/;"	f
create_stream_liver	net/net_tcp_server.c	/^struct liver* create_stream_liver(void)$/;"	f
create_transmitter_thread	consumer/common/transmitter.c	/^struct transmitter* create_transmitter_thread(struct liver* pliver, struct channel* pch)$/;"	f
ctrl_c_flag	utils/utils.c	/^static volatile uint8_t ctrl_c_flag = 0;$/;"	v	file:
data	include/consumer/common/ntv_desc.h	/^	uint8_t data[0];$/;"	m	struct:ntv_desc
data	include/net/nrb_gps.h	/^	uint8_t data[0];$/;"	m	struct:nrb_gps_desc
data	include/net/nrb_image.h	/^	uint8_t *data;$/;"	m	struct:nrb_image_desc
data	include/net/nrb_imu.h	/^	uint8_t data[0];$/;"	m	struct:nrb_imu_desc
data	include/net/nrb_odo.h	/^	uint8_t data[0];$/;"	m	struct:nrb_odo_desc
data	include/utils/fifo.h	/^    void* data;    $/;"	m	struct:node_t
data_ch	include/consumer/common/fabricator.h	/^	struct channel* data_ch;$/;"	m	struct:fabricator	typeref:struct:fabricator::channel
data_ch	include/consumer/common/pipeline.h	/^	struct channel* data_ch;$/;"	m	struct:pipeline	typeref:struct:pipeline::channel
data_ch	include/consumer/common/transmitter.h	/^	struct channel* data_ch;$/;"	m	struct:transmitter	typeref:struct:transmitter::channel
data_dir	consumer/online/save/save.c	/^char data_dir[200]="\/sdcard\/data_dir";$/;"	v
data_lanes	include/consumer/common/channel.h	/^	struct fifo* data_lanes[LANE_SIZE];$/;"	m	struct:channel	typeref:struct:channel::fifo
data_times	include/net/nrb_image.h	/^	uint32_t data_times;$/;"	m	struct:nrb_image_desc
data_timeu	include/net/nrb_image.h	/^	uint32_t data_timeu;$/;"	m	struct:nrb_image_desc
dest	include/consumer/common/dispatcher.h	/^	struct channel* dest; $/;"	m	struct:dispatcher	typeref:struct:dispatcher::channel
destroy_data_channel	consumer/common/channel.c	/^int destroy_data_channel(struct channel* pthis)$/;"	f
destroy_dispatcher	consumer/common/dispatcher.c	/^int destroy_dispatcher(struct dispatcher* pthis)$/;"	f
destroy_fabricator	consumer/common/fabricator.c	/^int destroy_fabricator(struct fabricator* pthis)$/;"	f
destroy_feeder	consumer/common/feeder.c	/^int destroy_feeder(struct feeder* pthis)$/;"	f
destroy_flc	consumer/flc/flc.c	/^static int destroy_flc(struct flc* pthis)$/;"	f	file:
destroy_liver	net/net_tcp_server.c	/^int destroy_liver(struct liver* pthis)$/;"	f
destroy_mav	consumer/mav/mav.c	/^static int destroy_mav(struct mav* pthis)$/;"	f	file:
destroy_pipeline	consumer/common/pipeline.c	/^int destroy_pipeline(struct pipeline* pthis)$/;"	f
destroy_recycler	consumer/common/recycler.c	/^void destroy_recycler(struct recycler** ppthis)$/;"	f
destroy_server	net/net_tcp_server.c	/^int destroy_server(struct server* pthis)$/;"	f
destroy_stream_liver	net/net_tcp_server.c	/^int destroy_stream_liver(struct liver* pthis)$/;"	f
destroy_transmitter	consumer/common/transmitter.c	/^int destroy_transmitter(struct transmitter* pthis)$/;"	f
destruct_cache_pool	consumer/common/cache_pool.c	/^void destruct_cache_pool(struct cache_pool** ppthis)$/;"	f
destruct_cpool_container	consumer/common/cache_pool.c	/^void destruct_cpool_container(struct cache_pool_container** ppthis, int flag)$/;"	f
destruct_nrb	include/net/nrb_desc.h	/^	void (*destruct_nrb)(void** pthis);$/;"	m	struct:nrb_ops
destruct_nrb_gps	net/nrb_gps.c	/^void destruct_nrb_gps(struct nrb_gps_desc** ppthis) $/;"	f
destruct_nrb_image	net/nrb_image.c	/^void destruct_nrb_image(struct nrb_image_desc** iblock)$/;"	f
destruct_nrb_imu	net/nrb_imu.c	/^void destruct_nrb_imu(struct nrb_imu_desc** pthis)$/;"	f
destruct_nrb_odo	net/nrb_odo.c	/^void destruct_nrb_odo(struct nrb_odo_desc** pthis)$/;"	f
destruct_ntv_desc	consumer/common/ntv_desc.c	/^void destruct_ntv_desc(struct ntv_desc** ppthis) $/;"	f
di_dispatcher2feeder	consumer/common/feeder.c	/^inline void di_dispatcher2feeder(struct feeder* pthis, struct dispatcher* pthat)$/;"	f
di_recycler2fabricator	consumer/common/fabricator.c	/^inline void di_recycler2fabricator(struct fabricator* pthis, struct recycler* pthat)$/;"	f
dispatcher	include/consumer/common/dispatcher.h	/^typedef struct dispatcher $/;"	s
dispatcher_t	include/consumer/common/dispatcher.h	/^}dispatcher_t;$/;"	t	typeref:struct:dispatcher
dispatching	consumer/common/dispatcher.c	/^int dispatching(struct dispatcher* pthis, void* material)$/;"	f
error	include/utils/utils.h	82;"	d
exit_if	include/utils/utils.h	67;"	d
fabricate_gps	consumer/common/fabricator.c	/^static void fabricate_gps(struct fabricator* pthis, struct ntv_desc* pntv)$/;"	f	file:
fabricate_image	consumer/common/fabricator.c	/^static void fabricate_image(struct fabricator* pthis, struct ntv_desc* pntv)$/;"	f	file:
fabricate_imu	consumer/common/fabricator.c	/^static void fabricate_imu(struct fabricator* pthis, struct ntv_desc* pntv)$/;"	f	file:
fabricate_odo	consumer/common/fabricator.c	/^static void fabricate_odo(struct fabricator* pthis, struct ntv_desc* pntv)$/;"	f	file:
fabricate_thread	consumer/common/fabricator.c	/^static void* fabricate_thread(void* args)$/;"	f	file:
fabricator	include/consumer/common/fabricator.h	/^struct fabricator $/;"	s
fabricator_t	include/consumer/common/fabricator.h	/^}fabricator_t;$/;"	v	typeref:struct:fabricator
feedback_nrb_gps	net/nrb_gps.c	/^void feedback_nrb_gps(struct cache_pool* pthis, struct nrb_gps_desc* pdata)$/;"	f
feedback_nrb_image	net/nec_image.c	/^void feedback_nrb_image(struct cache_pool* pthis, struct nrb_image_desc* pdata)$/;"	f
feedback_nrb_imu	net/nrb_imu.c	/^void feedback_nrb_imu(struct cache_pool* cpool, struct nrb_imu_desc* pdata)$/;"	f
feedback_nrb_odo	net/nrb_odo.c	/^void feedback_nrb_odo(struct cache_pool* cpool, struct nrb_odo_desc* pdata)$/;"	f
feedback_ntv_desc	consumer/common/ntv_desc.c	/^static void feedback_ntv_desc(struct cache_pool* cpool, struct ntv_desc* pdata)$/;"	f	file:
feeder	include/consumer/common/feeder.h	/^typedef struct feeder {$/;"	s
feeder_t	include/consumer/common/feeder.h	/^}feeder_t;$/;"	t	typeref:struct:feeder
feeding	consumer/common/feeder.c	/^int feeding(struct feeder* pthis, void* material)$/;"	f
fgps	consumer/online/save/save.c	/^int fimu = 0, fgps =0, fodo = 0;$/;"	v
fifo	include/utils/fifo.h	/^typedef struct fifo {$/;"	s
fifo_free	utils/fifo.c	/^void fifo_free(fifo_t* fifo)$/;"	f
fifo_is_empty	utils/fifo.c	/^int fifo_is_empty(fifo_t* fifo)$/;"	f
fifo_new	utils/fifo.c	/^fifo_t* fifo_new()$/;"	f
fifo_nrb	include/consumer/common/channel.h	18;"	d
fifo_nrb_rcc	include/consumer/common/channel.h	20;"	d
fifo_ntv	include/consumer/common/channel.h	17;"	d
fifo_ntv_rcc	include/consumer/common/channel.h	21;"	d
fifo_pop	utils/fifo.c	/^void* fifo_pop(fifo_t* fifo, int32_t timeout_sec)$/;"	f
fifo_push	utils/fifo.c	/^void fifo_push(fifo_t* fifo, void* data)$/;"	f
fifo_rxd	include/consumer/common/channel.h	19;"	d
fifo_t	include/utils/fifo.h	/^}fifo_t;$/;"	t	typeref:struct:fifo
fimu	consumer/online/save/save.c	/^int fimu = 0, fgps =0, fodo = 0;$/;"	v
flc	include/consumer/flc/flc.h	/^typedef struct flc $/;"	s
flc_obj	consumer/flc/flc.c	/^static struct flc* flc_obj;$/;"	v	typeref:struct:flc	file:
flc_t	include/consumer/flc/flc.h	/^}flc_t;$/;"	t	typeref:struct:flc
fodo	consumer/online/save/save.c	/^int fimu = 0, fgps =0, fodo = 0;$/;"	v
fragement	include/net/nrb_desc.h	/^	bool fragement; \/\/\/< fragementation or not.$/;"	m	struct:nrb_desc
front	include/utils/fifo.h	/^    struct node_t* front; $/;"	m	struct:fifo	typeref:struct:fifo::node_t
fthread	include/consumer/common/fabricator.h	/^	pthread_t fthread;$/;"	m	struct:fabricator
g_cam_save	consumer/online/save/save.c	/^struct cam_data_save g_cam_save[CAM_SAVE_COUNT] = {0};$/;"	v	typeref:struct:cam_data_save
g_iReadPos	consumer/online/save/save.c	/^static int g_iReadPos  = 0;$/;"	v	file:
g_iWritePos	consumer/online/save/save.c	/^static int g_iWritePos = 0;$/;"	v	file:
g_last_data_time	consumer/online/save/save.c	/^u64 g_last_data_time = 0;$/;"	v
get_cam_data	consumer/online/save/save.c	/^static struct cam_data_save* get_cam_data(int *rindex)$/;"	f	file:
get_client_fd	net/net_tcp_server.c	/^uint32_t get_client_fd(struct liver* lv)$/;"	f
get_client_state	net/net_tcp_server.c	/^int get_client_state(struct liver* lv)$/;"	f
get_cpu_count	utils/utils.c	/^int get_cpu_count(void)$/;"	f
get_ctrl_c	utils/utils.c	/^uint8_t get_ctrl_c(void) $/;"	f
get_liver_instance	net/net_tcp_server.c	/^struct liver* get_liver_instance(void)$/;"	f
get_nr_active	utils/fifo.c	/^uint32_t get_nr_active(fifo_t* fifo)$/;"	f
gps_cpool	include/consumer/common/cache_pool.h	26;"	d
handle_map_data_flc	consumer/flc/flc.c	/^void handle_map_data_flc(struct cam_data* cam, struct mcu_data* mcu)$/;"	f
handle_map_data_mav	consumer/mav/mav.c	/^void handle_map_data_mav(struct cam_data* cam, struct mcu_data* mcu)$/;"	f
id	include/consumer/common/ntv_desc.h	/^	enum ntv_id id;$/;"	m	struct:ntv_desc	typeref:enum:ntv_desc::ntv_id
id	include/net/nrb_desc.h	/^	enum nrb_id id;$/;"	m	struct:nrb_desc	typeref:enum:nrb_desc::nrb_id
image	include/net/nrb_image.h	/^	uint8_t* image;$/;"	m	struct:net_image_desc
img_cpool	include/consumer/common/cache_pool.h	29;"	d
imu_cpool	include/consumer/common/cache_pool.h	28;"	d
in	include/utils/ringbuffer.h	/^  uint32_t in;$/;"	m	struct:__anon1
index	include/net/nrb_image.h	/^	int32_t index;$/;"	m	struct:nrb_image_desc
ip_addr	include/net/net_tcp_server.h	/^	char* ip_addr;$/;"	m	struct:addr_map
is_empty	consumer/online/save/save.c	/^static int is_empty(void)$/;"	f	file:
is_full	consumer/online/save/save.c	/^static int is_full(void)$/;"	f	file:
is_power_of_2	utils/ringbuffer.c	/^static bool is_power_of_2(uint32_t x)$/;"	f	file:
likely	include/utils/utils.h	52;"	d
likely	include/utils/utils.h	57;"	d
list	include/consumer/common/cache_pool.h	/^	struct list_head list;   \/\/\/< cached object list$/;"	m	struct:cache_pool	typeref:struct:cache_pool::list_head
list_add	include/utils/ulist.h	/^static inline void list_add(struct list_head *new, struct list_head *head)$/;"	f
list_add_tail	include/utils/ulist.h	/^static inline void list_add_tail(struct list_head *new, struct list_head *head)$/;"	f
list_del	include/utils/ulist.h	/^static inline void list_del(struct list_head *entry)$/;"	f
list_del_init	include/utils/ulist.h	/^static inline void list_del_init(struct list_head *entry)$/;"	f
list_empty	include/utils/ulist.h	/^static inline int list_empty(struct list_head *head)$/;"	f
list_entry	include/utils/ulist.h	185;"	d
list_for_each	include/utils/ulist.h	193;"	d
list_for_each_entry	include/utils/ulist.h	221;"	d
list_for_each_entry_continue	include/utils/ulist.h	246;"	d
list_for_each_entry_safe	include/utils/ulist.h	233;"	d
list_for_each_prev	include/utils/ulist.h	201;"	d
list_for_each_safe	include/utils/ulist.h	211;"	d
list_head	include/utils/ulist.h	/^struct list_head {$/;"	s
list_move	include/utils/ulist.h	/^static inline void list_move(struct list_head *list, struct list_head *head)$/;"	f
list_move_tail	include/utils/ulist.h	/^static inline void list_move_tail(struct list_head *list,$/;"	f
list_splice	include/utils/ulist.h	/^static inline void list_splice(struct list_head *list, struct list_head *head)$/;"	f
list_splice_init	include/utils/ulist.h	/^static inline void list_splice_init(struct list_head *list,$/;"	f
live_server_thread	net/net_tcp_server.c	/^void *live_server_thread(void* args)$/;"	f
live_stream_thread	consumer/common/transmitter.c	/^static void* live_stream_thread(void *args)$/;"	f	file:
liver	include/net/net_tcp_server.h	/^typedef struct liver {$/;"	s
liver_t	include/net/net_tcp_server.h	/^}liver_t;$/;"	t	typeref:struct:liver
log	include/utils/utils.h	74;"	d
mav	include/consumer/mav/mav.h	/^typedef struct mav $/;"	s
mav_obj	consumer/mav/mav.c	/^static struct mav* mav_obj;$/;"	v	typeref:struct:mav	file:
mav_t	include/consumer/mav/mav.h	/^}mav_t;$/;"	t	typeref:struct:mav
max	include/utils/utils.h	48;"	d
min	consumer/online/save/save.c	20;"	d	file:
min	include/utils/utils.h	44;"	d
min	utils/ringbuffer.c	7;"	d	file:
mkdir_file	consumer/online/save/save.c	/^int mkdir_file(void)$/;"	f
mlock	include/consumer/common/cache_pool.h	/^	pthread_mutex_t mlock;$/;"	m	struct:cache_pool
mlock	include/utils/cache_pool.h	/^	pthread_mutex_t mlock;$/;"	m	struct:cache_rb_root
monitor_ch	include/consumer/common/recycler.h	/^	struct channel* monitor_ch;$/;"	m	struct:recycler	typeref:struct:recycler::channel
mutex	include/net/net_tcp_server.h	/^	pthread_mutex_t mutex;$/;"	m	struct:liver
mutex	include/utils/fifo.h	/^    pthread_mutex_t mutex;$/;"	m	struct:fifo
net_image_desc	include/net/nrb_image.h	/^struct net_image_desc {$/;"	s
net_image_desc_t	include/net/nrb_image.h	/^}net_image_desc_t;$/;"	v	typeref:struct:net_image_desc
net_state	include/net/net_tcp_server.h	/^	volatile uint32_t net_state;$/;"	m	struct:liver
next	include/utils/fifo.h	/^    struct node_t* next;$/;"	m	struct:node_t	typeref:struct:node_t::node_t
next	include/utils/ulist.h	/^	struct list_head *next, *prev;$/;"	m	struct:list_head	typeref:struct:list_head::list_head
node	include/consumer/common/ntv_desc.h	/^	struct list_head node;$/;"	m	struct:ntv_desc	typeref:struct:ntv_desc::list_head
node	include/consumer/common/pipeline.h	/^	struct list_head node;$/;"	m	struct:pipeline	typeref:struct:pipeline::list_head
node	include/net/nrb_gps.h	/^	struct list_head node;$/;"	m	struct:nrb_gps_desc	typeref:struct:nrb_gps_desc::list_head
node	include/net/nrb_image.h	/^	struct list_head node;$/;"	m	struct:nrb_image_desc	typeref:struct:nrb_image_desc::list_head
node	include/net/nrb_imu.h	/^	struct list_head node;$/;"	m	struct:nrb_imu_desc	typeref:struct:nrb_imu_desc::list_head
node	include/net/nrb_odo.h	/^	struct list_head node;$/;"	m	struct:nrb_odo_desc	typeref:struct:nrb_odo_desc::list_head
node_t	include/utils/fifo.h	/^typedef struct node_t {$/;"	s
node_t	include/utils/fifo.h	/^}node_t;$/;"	t	typeref:struct:node_t
nr	include/consumer/common/cache_pool.h	/^	uint32_t nr;$/;"	m	struct:cache_pool
nr_active	include/utils/fifo.h	/^	volatile uint32_t nr_active;$/;"	m	struct:fifo
nr_node	include/utils/cache_pool.h	/^	size_t nr_node;$/;"	m	struct:cache_rb_root
nrb_cpool_ctner	include/consumer/common/recycler.h	/^	struct cache_pool_container* nrb_cpool_ctner;$/;"	m	struct:recycler	typeref:struct:recycler::cache_pool_container
nrb_desc	include/net/nrb_desc.h	/^typedef struct nrb_desc {$/;"	s
nrb_desc_t	include/net/nrb_desc.h	/^}nrb_desc_t;$/;"	t	typeref:struct:nrb_desc
nrb_gps_desc	include/net/nrb_gps.h	/^typedef struct nrb_gps_desc {$/;"	s
nrb_gps_desc_t	include/net/nrb_gps.h	/^}nrb_gps_desc_t;$/;"	t	typeref:struct:nrb_gps_desc
nrb_gps_encoder	net/nec_gps.c	/^void nrb_gps_encoder(struct nrb_gps_desc* pthis, void* pdata, size_t data_size)$/;"	f
nrb_id	include/net/nrb_desc.h	/^typedef enum nrb_id {$/;"	g
nrb_id_t	include/net/nrb_desc.h	/^}nrb_id_t;$/;"	t	typeref:enum:nrb_id
nrb_image_desc	include/net/nrb_image.h	/^typedef struct nrb_image_desc {$/;"	s
nrb_image_desc_t	include/net/nrb_image.h	/^}nrb_image_desc_t;$/;"	t	typeref:struct:nrb_image_desc
nrb_image_encoder	net/nec_image.c	/^void nrb_image_encoder(struct cache_pool* cpool, struct net_image_desc* pimage,$/;"	f
nrb_imu_desc	include/net/nrb_imu.h	/^typedef struct nrb_imu_desc {$/;"	s
nrb_imu_desc_t	include/net/nrb_imu.h	/^}nrb_imu_desc_t;$/;"	t	typeref:struct:nrb_imu_desc
nrb_imu_encoder	net/nec_imu.c	/^void nrb_imu_encoder(struct nrb_imu_desc* pthis, void* pdata, size_t data_size)$/;"	f
nrb_odo_desc	include/net/nrb_odo.h	/^typedef struct nrb_odo_desc {$/;"	s
nrb_odo_desc_t	include/net/nrb_odo.h	/^}nrb_odo_desc_t;$/;"	t	typeref:struct:nrb_odo_desc
nrb_odo_encoder	net/nec_odo.c	/^void nrb_odo_encoder(struct nrb_odo_desc* pthis, void* pdata, size_t data_size)$/;"	f
nrb_ops	include/net/nrb_desc.h	/^typedef struct nrb_ops {$/;"	s
nrb_ops_t	include/net/nrb_desc.h	/^}nrb_ops_t;$/;"	t	typeref:struct:nrb_ops
nrb_rthread	include/consumer/common/recycler.h	/^	pthread_t nrb_rthread;$/;"	m	struct:recycler
ntv_cpool_ctner	include/consumer/common/recycler.h	/^	struct cache_pool_container* ntv_cpool_ctner;$/;"	m	struct:recycler	typeref:struct:recycler::cache_pool_container
ntv_desc	include/consumer/common/ntv_desc.h	/^typedef struct ntv_desc { \/\/\/< native description$/;"	s
ntv_desc_t	include/consumer/common/ntv_desc.h	/^}ntv_desc_t;$/;"	t	typeref:struct:ntv_desc
ntv_id	include/consumer/common/ntv_desc.h	/^typedef enum ntv_id {$/;"	g
ntv_id_t	include/consumer/common/ntv_desc.h	/^}ntv_id_t;$/;"	t	typeref:enum:ntv_id
ntv_rthread	include/consumer/common/recycler.h	/^	pthread_t ntv_rthread;$/;"	m	struct:recycler
odo_cpool	include/consumer/common/cache_pool.h	27;"	d
offsetof	include/utils/rbtree.h	116;"	d
offsetof	include/utils/rbtree.h	117;"	d
offsetof	include/utils/rbtree.h	119;"	d
ops	include/net/nrb_desc.h	/^	struct nrb_ops* ops;$/;"	m	struct:nrb_desc	typeref:struct:nrb_desc::nrb_ops
out	include/utils/ringbuffer.h	/^  uint32_t out;$/;"	m	struct:__anon1
padding_protocol_main_body	net/nec_image.c	/^static inline void padding_protocol_main_body(struct nrb_image_desc* iblock, const void* source, size_t size)$/;"	f	file:
pdsp	include/consumer/common/feeder.h	/^	struct dispatcher* pdsp;	$/;"	m	struct:feeder	typeref:struct:feeder::dispatcher
pdsp	include/consumer/common/pipeline.h	/^	struct dispatcher* pdsp; $/;"	m	struct:pipeline	typeref:struct:pipeline::dispatcher
pfabr	include/consumer/common/pipeline.h	/^	struct fabricator* pfabr;$/;"	m	struct:pipeline	typeref:struct:pipeline::fabricator
pfeeder	include/consumer/common/pipeline.h	/^	struct feeder* pfeeder;$/;"	m	struct:pipeline	typeref:struct:pipeline::feeder
pickup_nrb_gps	net/nrb_gps.c	/^struct nrb_gps_desc* pickup_nrb_gps(struct cache_pool* pthis, size_t size)$/;"	f
pickup_nrb_image	net/nec_image.c	/^struct nrb_image_desc* pickup_nrb_image(struct cache_pool* cpool)$/;"	f
pickup_nrb_imu	net/nrb_imu.c	/^struct nrb_imu_desc* pickup_nrb_imu(struct cache_pool* cpool, size_t size)$/;"	f
pickup_nrb_odo	net/nrb_odo.c	/^struct nrb_odo_desc* pickup_nrb_odo(struct cache_pool* cpool, size_t size)$/;"	f
pickup_ntv_desc	consumer/common/ntv_desc.c	/^static struct ntv_desc* pickup_ntv_desc(struct cache_pool* cpool, size_t size)$/;"	f	file:
pipeline	include/consumer/common/pipeline.h	/^typedef struct pipeline$/;"	s
pipeline_amount	include/consumer/flc/flc.h	/^	int pipeline_amount;     \/\/\/< total pipeline in flc system $/;"	m	struct:flc
pipeline_amount	include/consumer/mav/mav.h	/^	int pipeline_amount;     \/\/\/< total pipeline in mav system $/;"	m	struct:mav
pipeline_t	include/consumer/common/pipeline.h	/^}pipeline_t;$/;"	t	typeref:struct:pipeline
pliver	include/consumer/common/fabricator.h	/^	struct liver* pliver;$/;"	m	struct:fabricator	typeref:struct:fabricator::liver
pliver	include/consumer/common/pipeline.h	/^	struct liver* pliver;	$/;"	m	struct:pipeline	typeref:struct:pipeline::liver
pliver	include/consumer/common/transmitter.h	/^	struct liver* pliver;$/;"	m	struct:transmitter	typeref:struct:transmitter::liver
pliver	include/net/net_tcp_server.h	/^	struct liver* pliver;$/;"	m	struct:server	typeref:struct:server::liver
port	include/net/net_tcp_server.h	/^	char* port;$/;"	m	struct:addr_map
pplist	include/consumer/flc/flc.h	/^	struct list_head pplist; \/\/\/< struct pipeline $/;"	m	struct:flc	typeref:struct:flc::list_head
pplist	include/consumer/mav/mav.h	/^	struct list_head pplist; \/\/\/< struct pipeline $/;"	m	struct:mav	typeref:struct:mav::list_head
prcc	include/consumer/common/fabricator.h	/^	struct recycler* prcc;$/;"	m	struct:fabricator	typeref:struct:fabricator::recycler
prcc	include/consumer/common/pipeline.h	/^	struct recycler* prcc;$/;"	m	struct:pipeline	typeref:struct:pipeline::recycler
prev	include/utils/ulist.h	/^	struct list_head *next, *prev;$/;"	m	struct:list_head	typeref:struct:list_head::
priv	include/net/net_tcp_server.h	/^	void *priv;$/;"	m	struct:liver
pserver	include/consumer/common/pipeline.h	/^	struct server* pserver;$/;"	m	struct:pipeline	typeref:struct:pipeline::server
pstGPSRingBuf	consumer/online/save/save.c	/^RingBuffer *pstGPSRingBuf;$/;"	v
pstIMURingBuf	consumer/online/save/save.c	/^RingBuffer *pstIMURingBuf;$/;"	v
pstODORingBuf	consumer/online/save/save.c	/^RingBuffer *pstODORingBuf;$/;"	v
ptx	include/consumer/common/pipeline.h	/^	struct transmitter* ptx;	$/;"	m	struct:pipeline	typeref:struct:pipeline::transmitter
put_cam_data	consumer/online/save/save.c	/^static int put_cam_data(struct cam_data* pcam_data)$/;"	f	file:
rb_augment_erase_begin	utils/rbtree.c	/^struct rb_node *rb_augment_erase_begin(struct rb_node *node)$/;"	f
rb_augment_erase_end	utils/rbtree.c	/^void rb_augment_erase_end(struct rb_node *node, rb_augment_f func, void *data)$/;"	f
rb_augment_f	include/utils/rbtree.h	/^typedef void (*rb_augment_f)(struct rb_node *node, void *data);$/;"	t
rb_augment_insert	utils/rbtree.c	/^void rb_augment_insert(struct rb_node *node, rb_augment_f func, void *data)$/;"	f
rb_augment_path	utils/rbtree.c	/^static void rb_augment_path(struct rb_node *node, rb_augment_f func, void *data)$/;"	f	file:
rb_color	include/utils/rbtree.h	146;"	d
rb_entry	include/utils/rbtree.h	162;"	d
rb_erase	utils/rbtree.c	/^void rb_erase(struct rb_node *node, struct rb_root *root)$/;"	f
rb_first	utils/rbtree.c	/^struct rb_node *rb_first(const struct rb_root *root)$/;"	f
rb_init_node	include/utils/rbtree.h	/^static inline void rb_init_node(struct rb_node *rb)$/;"	f
rb_insert_color	utils/rbtree.c	/^void rb_insert_color(struct rb_node *node, struct rb_root *root)$/;"	f
rb_is_black	include/utils/rbtree.h	148;"	d
rb_is_red	include/utils/rbtree.h	147;"	d
rb_last	utils/rbtree.c	/^struct rb_node *rb_last(const struct rb_root *root)$/;"	f
rb_left	include/utils/rbtree.h	/^	struct rb_node *rb_left;$/;"	m	struct:rb_node	typeref:struct:rb_node::rb_node
rb_link_node	include/utils/rbtree.h	/^static inline void rb_link_node(struct rb_node * node, struct rb_node * parent,$/;"	f
rb_next	utils/rbtree.c	/^struct rb_node *rb_next(const struct rb_node *node)$/;"	f
rb_node	include/utils/rbtree.h	/^	struct rb_node *rb_node;$/;"	m	struct:rb_root	typeref:struct:rb_root::rb_node
rb_node	include/utils/rbtree.h	/^struct rb_node$/;"	s
rb_parent	include/utils/rbtree.h	145;"	d
rb_parent_color	include/utils/rbtree.h	/^	unsigned long  rb_parent_color;$/;"	m	struct:rb_node
rb_prev	utils/rbtree.c	/^struct rb_node *rb_prev(const struct rb_node *node)$/;"	f
rb_replace_node	utils/rbtree.c	/^void rb_replace_node(struct rb_node *victim, struct rb_node *new,$/;"	f
rb_right	include/utils/rbtree.h	/^	struct rb_node *rb_right;$/;"	m	struct:rb_node	typeref:struct:rb_node::rb_node
rb_root	include/utils/rbtree.h	/^struct rb_root$/;"	s
rb_set_black	include/utils/rbtree.h	150;"	d
rb_set_color	include/utils/rbtree.h	/^static inline void rb_set_color(struct rb_node *rb, int color)$/;"	f
rb_set_parent	include/utils/rbtree.h	/^static inline void rb_set_parent(struct rb_node *rb, struct rb_node *p)$/;"	f
rb_set_red	include/utils/rbtree.h	149;"	d
read_jpg_file	consumer/common/persistence.c	/^void read_jpg_file(const char* name, uint8_t** ppdata, size_t* size)$/;"	f
rear	include/utils/fifo.h	/^    struct node_t* rear; $/;"	m	struct:fifo	typeref:struct:fifo::node_t
recycle_nrb_gps	net/nrb_gps.c	/^void recycle_nrb_gps(struct cache_pool* pthis, struct nrb_gps_desc* pdata)$/;"	f
recycle_nrb_image	net/nec_image.c	/^void recycle_nrb_image(struct cache_pool* cpool, struct nrb_image_desc* pdata)$/;"	f
recycle_nrb_imu	net/nrb_imu.c	/^void recycle_nrb_imu(struct cache_pool* cpool, struct nrb_imu_desc* pdata)$/;"	f
recycle_nrb_odo	net/nrb_odo.c	/^void recycle_nrb_odo(struct cache_pool* cpool, struct nrb_odo_desc* pdata)$/;"	f
recycle_ntv_desc	consumer/common/ntv_desc.c	/^void recycle_ntv_desc(struct cache_pool* cpool, struct ntv_desc* pdata)$/;"	f
recycler	include/consumer/common/recycler.h	/^struct recycler $/;"	s
recycler_t	include/consumer/common/recycler.h	/^}recycler_t;$/;"	v	typeref:struct:recycler
recycler_thread_nrb	consumer/common/recycler.c	/^static void* recycler_thread_nrb(void *args)$/;"	f	file:
recycler_thread_ntv	consumer/common/recycler.c	/^static void* recycler_thread_ntv(void *args)$/;"	f	file:
resc	include/consumer/common/dispatcher.h	/^	struct feeder* resc;$/;"	m	struct:dispatcher	typeref:struct:dispatcher::feeder
restrict	include/utils/fifo.h	23;"	d
rfmap	include/net/nrb_desc.h	/^	void* rfmap;     \/\/\/< reflaction mapping$/;"	m	struct:nrb_desc
root	include/utils/cache_pool.h	/^	struct rb_root root;$/;"	m	struct:cache_rb_root	typeref:struct:cache_rb_root::rb_root
roundup_pow_of_two	utils/ringbuffer.c	/^static uint32_t roundup_pow_of_two(uint32_t x)$/;"	f	file:
save_cb	consumer/online/save/save.c	/^void save_cb(struct cam_data* pcam_data, struct mcu_data* pmcu_data)$/;"	f
save_yuv_luma_data	consumer/online/save/save.c	/^int save_yuv_luma_data(cam_buf_type ctype, struct iav_yuv_cap *yuv_cap, double timestamp)$/;"	f
server	include/net/net_tcp_server.h	/^struct server $/;"	s
server_fd	include/net/net_tcp_server.h	/^	volatile uint32_t server_fd;$/;"	m	struct:liver
server_t	include/net/net_tcp_server.h	/^}server_t;$/;"	v	typeref:struct:server
set_client_fd	net/net_tcp_server.c	/^void set_client_fd(struct liver* lv, uint32_t fd)$/;"	f
set_client_state	net/net_tcp_server.c	/^void set_client_state(struct liver* lv, int state)$/;"	f
set_ctrl_c	utils/utils.c	/^void set_ctrl_c(void) $/;"	f
set_non_blocking	utils/utils.c	/^int set_non_blocking(int fd) $/;"	f
set_nrb_gps_checksum	net/nec_gps.c	/^static inline void set_nrb_gps_checksum(struct nrb_gps_desc* pthis, size_t size)$/;"	f	file:
set_nrb_gps_data	net/nec_gps.c	/^static inline void set_nrb_gps_data(struct nrb_gps_desc* pthis, void* pdata, size_t size)$/;"	f	file:
set_nrb_gps_head	net/nec_gps.c	/^static inline void set_nrb_gps_head(struct nrb_gps_desc* pthis)$/;"	f	file:
set_nrb_gps_id	net/nec_gps.c	/^static inline void set_nrb_gps_id(struct nrb_gps_desc* pthis, uint32_t id)$/;"	f	file:
set_nrb_gps_length	net/nec_gps.c	/^static inline void set_nrb_gps_length(struct nrb_gps_desc* pthis, size_t size)$/;"	f	file:
set_nrb_gps_timestamp	net/nec_gps.c	/^static inline void set_nrb_gps_timestamp(struct nrb_gps_desc* pthis, uint64_t ts64)$/;"	f	file:
set_nrb_imu_checksum	net/nec_imu.c	/^static inline void set_nrb_imu_checksum(struct nrb_imu_desc* pthis, size_t size)$/;"	f	file:
set_nrb_imu_data	net/nec_imu.c	/^static inline void set_nrb_imu_data(struct nrb_imu_desc* pthis, void* pdata, size_t size)$/;"	f	file:
set_nrb_imu_head	net/nec_imu.c	/^static inline void set_nrb_imu_head(struct nrb_imu_desc* pthis)$/;"	f	file:
set_nrb_imu_id	net/nec_imu.c	/^static inline void set_nrb_imu_id(struct nrb_imu_desc* pthis, uint32_t id)$/;"	f	file:
set_nrb_imu_length	net/nec_imu.c	/^static inline void set_nrb_imu_length(struct nrb_imu_desc* pthis, size_t size)$/;"	f	file:
set_nrb_imu_timestamp	net/nec_imu.c	/^static inline void set_nrb_imu_timestamp(struct nrb_imu_desc* pthis, uint64_t ts64)$/;"	f	file:
set_nrb_odo_checksum	net/nec_odo.c	/^static inline void set_nrb_odo_checksum(struct nrb_odo_desc* pthis, size_t size)$/;"	f	file:
set_nrb_odo_data	net/nec_odo.c	/^static inline void set_nrb_odo_data(struct nrb_odo_desc* pthis, void* pdata, size_t size)$/;"	f	file:
set_nrb_odo_head	net/nec_odo.c	/^static inline void set_nrb_odo_head(struct nrb_odo_desc* pthis)$/;"	f	file:
set_nrb_odo_id	net/nec_odo.c	/^static inline void set_nrb_odo_id(struct nrb_odo_desc* pthis, uint32_t id)$/;"	f	file:
set_nrb_odo_length	net/nec_odo.c	/^static inline void set_nrb_odo_length(struct nrb_odo_desc* pthis, size_t size)$/;"	f	file:
set_nrb_odo_timestamp	net/nec_odo.c	/^static inline void set_nrb_odo_timestamp(struct nrb_odo_desc* pthis, uint64_t ts64)$/;"	f	file:
set_protocol_checksum	net/nec_image.c	/^static inline void set_protocol_checksum(struct nrb_image_desc* iblock, size_t size)$/;"	f	file:
set_protocol_flags	net/nec_image.c	/^static inline void set_protocol_flags(struct nrb_image_desc* iblock, uint8_t end)$/;"	f	file:
set_protocol_head	net/nec_image.c	/^static inline void set_protocol_head(struct nrb_image_desc* iblock)$/;"	f	file:
set_protocol_id	net/nec_image.c	/^static inline void set_protocol_id(struct nrb_image_desc* iblock, int id)$/;"	f	file:
set_protocol_slice_index	net/nec_image.c	/^static inline void set_protocol_slice_index(struct nrb_image_desc* iblock, uint8_t index)$/;"	f	file:
set_protocol_slice_size	net/nec_image.c	/^static inline void set_protocol_slice_size(struct nrb_image_desc* iblock, size_t size)$/;"	f	file:
set_protocol_timestamp	net/nec_image.c	/^static inline void set_protocol_timestamp(struct nrb_image_desc* iblock, uint64_t ts64)$/;"	f	file:
set_protocol_to_send	net/nec_image.c	/^static inline void set_protocol_to_send(struct nrb_image_desc* iblock, size_t length)$/;"	f	file:
set_thread_cpu_affinity	utils/utils.c	/^int set_thread_cpu_affinity(pthread_attr_t* pattr, int cpu_index)$/;"	f
setup_flc	consumer/flc/flc.c	/^static struct flc* setup_flc(int pipeline_amount)$/;"	f	file:
setup_flc_service	consumer/flc/flc.c	/^int setup_flc_service(void)		$/;"	f
setup_mav	consumer/mav/mav.c	/^static struct mav* setup_mav(int pipeline_amount)$/;"	f	file:
setup_mav_service	consumer/mav/mav.c	/^int setup_mav_service(void)		$/;"	f
shutdown_flc_service	consumer/flc/flc.c	/^int shutdown_flc_service(void)$/;"	f
shutdown_mav_service	consumer/mav/mav.c	/^int shutdown_mav_service(void)$/;"	f
sigpipe	utils/utils.c	/^void sigpipe(int sig)$/;"	f
sigstop	utils/utils.c	/^void sigstop(int sig)$/;"	f
size	include/consumer/common/ntv_desc.h	/^	size_t size;  \/\/\/< real data size, less than or equal to capacity	$/;"	m	struct:ntv_desc
size	include/net/nrb_gps.h	/^	size_t size;     \/\/\/< real data size$/;"	m	struct:nrb_gps_desc
size	include/net/nrb_image.h	/^	size_t size;$/;"	m	struct:net_image_desc
size	include/net/nrb_image.h	/^	size_t size;$/;"	m	struct:nrb_image_desc
size	include/net/nrb_imu.h	/^	size_t size;	$/;"	m	struct:nrb_imu_desc
size	include/net/nrb_odo.h	/^	size_t size;	$/;"	m	struct:nrb_odo_desc
size	include/utils/ringbuffer.h	/^  uint32_t size;$/;"	m	struct:__anon1
sjpg_thread	consumer/online/save/save.c	/^static pthread_t sjpg_thread;$/;"	v	file:
sjpg_thread_handle	consumer/online/save/save.c	/^static void *sjpg_thread_handle(void *data)$/;"	f	file:
slice_number	include/net/nrb_image.h	/^	int32_t slice_number;$/;"	m	struct:nrb_image_desc
smcu_thread	consumer/online/save/save.c	/^static pthread_t smcu_thread;$/;"	v	file:
smcu_thread_handle	consumer/online/save/save.c	/^static void *smcu_thread_handle(void *data)$/;"	f	file:
stamp	include/net/nrb_image.h	/^	double stamp;$/;"	m	struct:net_image_desc
sthread	include/net/net_tcp_server.h	/^	pthread_t sthread;$/;"	m	struct:server
submit_nrb_gps	net/nrb_gps.c	/^inline void submit_nrb_gps(fifo_t* fifo, struct nrb_gps_desc* pdata)$/;"	f
submit_nrb_image	net/nrb_image.c	/^inline void submit_nrb_image(fifo_t* fifo, struct nrb_image_desc* pdata)$/;"	f
submit_nrb_imu	net/nrb_imu.c	/^inline void submit_nrb_imu(fifo_t* fifo, struct nrb_imu_desc* pdata)$/;"	f
submit_nrb_odo	net/nrb_odo.c	/^inline void submit_nrb_odo(fifo_t* fifo, struct nrb_odo_desc* pdata)$/;"	f
subscribe_image_data	consumer/flc/flc.c	/^static int subscribe_image_data(struct cam_data* cam)$/;"	f	file:
subscribe_image_data	consumer/mav/mav.c	/^static int subscribe_image_data(struct cam_data* cam)$/;"	f	file:
subscribe_mcu_data	consumer/flc/flc.c	/^static int subscribe_mcu_data(struct mcu_data* mcu)$/;"	f	file:
timestamp	include/consumer/common/ntv_desc.h	/^	double timestamp;$/;"	m	struct:ntv_desc
to_send	include/net/nrb_desc.h	/^	size_t to_send;$/;"	m	struct:nrb_desc
transmitter	include/consumer/common/transmitter.h	/^struct transmitter $/;"	s
transmitter_t	include/consumer/common/transmitter.h	/^}transmitter_t;$/;"	v	typeref:struct:transmitter
tthread	include/consumer/common/transmitter.h	/^	pthread_t tthread;$/;"	m	struct:transmitter
unlikely	include/utils/utils.h	53;"	d
unlikely	include/utils/utils.h	58;"	d
update_events	net/net_tcp_server.c	/^void update_events(int efd, int fd, int events, int op) $/;"	f
vmt	include/consumer/common/base_object.h	/^	const struct bobject_vmt* vmt;$/;"	m	struct:bobject	typeref:struct:bobject::bobject_vmt
write_data_file	consumer/online/save/save.c	/^static void write_data_file(char* buff, int length, int* file, char *fpath)$/;"	f	file:
write_jpg_file	consumer/common/persistence.c	/^int write_jpg_file(const char* name, const void* data, size_t size)$/;"	f
